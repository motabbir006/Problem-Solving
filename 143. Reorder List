class Solution {
public:
    void reorderList(ListNode* head) {
        if (!head || !head->next)
            return;

        // Step 1: Split the list in half
        ListNode *slow = head, *fast = head;
        while (fast && fast->next) {
            slow = slow->next;
            fast = fast->next->next;
        }

        // Step 2: Reverse the second half
        ListNode *prev = nullptr, *curr = slow, *nextNode;
        while (curr) {
            nextNode = curr->next;
            curr->next = prev;
            prev = curr;
            curr = nextNode;
        }

        // Step 3: Merge the two halves
        ListNode *first = head, *second = prev;
        while (second->next) {
            nextNode = first->next;
            first->next = second;
            first = nextNode;

            nextNode = second->next;
            second->next = first;
            second = nextNode;
        }
    }
};
