
class Solution:
    def fourSum(self, nums: List[int], target: int) -> List[List[int]]:
        nums.sort() 
        res, quad = [], [] 
        def KSum(k, start, target):  
            if k != 2: 
                for i in range(start, len(nums) - k + 1):
                    if start < i and nums[i - 1] == nums[i]: 
                        continue
                    quad.append(nums[i])  
                    KSum(k - 1, i + 1, target - nums[i]) 
                    quad.pop() 
                return

            l, r = start, len(nums) - 1
            while l < r:
                if nums[l] + nums[r] < target:
                    l += 1
                elif nums[l] + nums[r] > target:
                    r -= 1
                else:
                    res.append(quad + [nums[l], nums[r]]) 
                    l += 1
                    while l < r and nums[l - 1] == nums[l]:
                        l += 1

        KSum(4, 0, target)
        return res
