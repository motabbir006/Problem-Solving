class Solution {
public:
    int numSubarraysWithSum(std::vector<int>& nums, int goal) {
        int n = nums.size();
        int count = 0;
        int sum = 0;
        std::unordered_map<int, int> prefixSumFrequency;

        for (int i = 0; i < n; ++i) {
            sum += nums[i];

            if (sum == goal)
                ++count;

            if (prefixSumFrequency.find(sum - goal) != prefixSumFrequency.end())
                count += prefixSumFrequency[sum - goal];

            prefixSumFrequency[sum]++;
        }

        return count;
    }
};
