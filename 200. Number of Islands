class Solution {
public:
    void dfs(vector<vector<char>>& grid,int x,int y,map<pair<int,int>,int> &vis)
    {
        int n=grid.size(),m=grid[0].size();
        if(x<0 || x>=n || y<0 || y>=m || grid[x][y]=='0' || vis[{x,y}]) return;
        vis[{x,y}]=1;
        dfs(grid,x+1,y,vis);
        dfs(grid,x-1,y,vis);
        dfs(grid,x,y+1,vis);
        dfs(grid,x,y-1,vis);
        
    }
    
    int numIslands(vector<vector<char>>& grid) {
        int n=grid.size();
        if(n==0)return 0;
        int m=grid[0].size();
        map<pair<int,int>,int> vis;
        int cnt=0;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]=='1' and vis.count({i,j})==0){
                    dfs(grid,i,j,vis);
                    cnt++;
                }
            }
        }
        return cnt;
    }
};
