class Solution {
public:
    int firstMissingPositive(vector<int>& nums) {
        int n = nums.size();
        bool hasPositive = false, hasNegative = false, hasZero = false;
        unordered_map<int, int> mp;
      
        for(int i=0; i<n; i++) {
            if(nums[i]<=0) {
                nums[i]=INT_MAX;
            }
            if(nums[i]>n) {
                nums[i]=INT_MAX;
            }
        }
        int arr[500005]={};
        for(int i=0; i<n; i++) {
            if(nums[i]!=INT_MAX) {
                arr[nums[i]]=1;
            }
        }
        int mn=INT_MAX, last=-INT_MAX;
        for(int i=1; i<=n; i++) {
            if(arr[i]==1) {
                last = i;
            } else {
                mn=min(mn, i);
            }
        }

      
        if(last==-INT_MAX) {
            return 1;
        }
        
        if(last==mn) {
            return mn+1;
        } else {
            if(mn==INT_MAX) return last+1;
            return mn;
        }     
        return 1;
    }
    
};
